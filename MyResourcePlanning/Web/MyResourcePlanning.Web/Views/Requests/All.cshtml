@*@model List<Eventures.Models.ViewModels.EventAllViewModel>
    *@

    @{
    ViewData["Title"] = "All";
    }

    <div class="jumbotron">
        <h1 class="text-center">All Requests</h1>
        <hr class="bg-resources hr-2" />
        <div class="table-responsive">
            <table id="myTable2" class="table table-striped table-bordered table-sm" cellspacing="0" width="100%">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Project<i onclick="sortTable(0)" class="fa fa-fw fa-sort"></i></th>
                        <th scope="col">Resource<i onclick="sortTable(1)" class="fa fa-fw fa-sort"></i></th>
                        <th scope="col">Start<i onclick="sortTable(2)" class="fa fa-fw fa-sort"></i></th>
                        <th scope="col">End<i onclick="sortTable(3)" class="fa fa-fw fa-sort"></i></th>
                        <th scope="col">Hours<i onclick="sortTable(4)" class="fa fa-fw fa-sort"></i></th>
                        <th scope="col">Status<i onclick="sortTable(5)" class="fa fa-fw fa-sort"></i></th>
                        <th scope="col">Action<i onclick="sortTable(6)" class="fa fa-fw fa-sort"></i></th>
                    </tr>
                </thead>
                <tbody>
                    @*@for (int i = 0; i < Model.Count; i++)
                    {
                    <tr class="row mx-auto">
                        <td class="col-md-1">@(i + 1)</td>
                        <td class="col-md-5">@Model[i].Name</td>
                        <td class="col-md-2">@Model[i].Start</td>
                        <td class="col-md-2">@Model[i].End</td>
                        <td class="col-md-2">@Model[i].Place</td>
                    </tr>
                    }*@
                    <tr>
                        <th scope="row">1</th>
                        <td>Test Test Test Test</td>
                        <td>Dimo Yanev</td>
                        <td>Test</td>
                        <td>Test</td>
                        <td>10</td>
                        <td>Test</td>
                        <td>
                            <button class="btn bg-transparent"><i class="fas fa-edit" data-placement="top" title="Edit Request"></i></button>
                            <button class="btn bg-transparent"><i class="far fa-trash-alt" data-placement="top" title="Delete Request"></i></button>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">2</th>
                        <td>Test</td>
                        <td>Test</td>
                        <td>Test</td>
                        <td>Test</td>
                        <td>20</td>
                        <td>Test</td>
                        <td>
                            <button class="btn bg-transparent"><i class="far fa-thumbs-up" data-toggle="tooltip" data-placement="top" title="Book Request"></i></button>
                            <button class="btn bg-transparent"><i class="far fa-thumbs-down" data-toggle="tooltip" data-placement="top" title="Reject Request"></i></button>
                        </td>
                    </tr>
                    <tr>
                        <th scope="row">3</th>
                        <td>abc</td>
                        <td>bbc</td>
                        <td>Test</td>
                        <td>Test</td>
                        <td>30</td>
                        <td>Test</td>
                        <td>
                            <button class="btn bg-transparent"><i class="far fa-thumbs-up" data-toggle="tooltip" data-placement="top" title="Book Request"></i></button>
                            <button class="btn bg-transparent"><i class="far fa-thumbs-down" data-toggle="tooltip" data-placement="top" title="Reject Request"></i></button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        function sortTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("myTable2");
            switching = true;
            dir = "asc";
            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    if (dir == "asc") {
                        if (Number(x.innerHTML) > Number(y.innerHTML)) {
                            shouldSwitch = true;
                            break;
                        }
                        else if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                         if (Number(x.innerHTML) > Number(y.innerHTML)) {
                            shouldSwitch = true;
                            break;
                        }
                        else if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                       
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else {
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }

        }
    </script>
